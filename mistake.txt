 
以下是本人使用git时出现的各类错误O



--------------------------------------------
错误1：远程同步的push和pull
    ! [rejected]        master -> master (fetch first)
    error: failed to push some refs to 'https://gitee.com/cn_xxxxx/node.git'
    hint: Updates were rejected because the remote contains work that you do
    hint: not have locally. This is usually caused by another repository pushing
    hint: to the same ref. You may want to first integrate the remote changes
    hint: (e.g., 'git pull ...') before pushing again.
    hint: See the 'Note about fast-forwards' in 'git push --help' for details.
    
    出现上面并push卡住时：大概原因就是 意思是本地和远程的文件应该合并后才能上传本地的新文件
    1、先拉下来，会自动合并的（不用操心）
    git pull origin master
    2、再上传
    git push -u origin master

    成功解决问题
 

-------------------------------------------
错误1补充
                Pull is not possible because you have unmerged files错误解决！
                
                应该是因为local文件冲突了
            解决方法：
            引用――
            “
            1.pull会使用git merge导致冲突，需要将冲突的文件resolve掉 git add -u, git commit之后才能成功pull.
            2.如果想放弃本地的文件修改，可以使用git reset --hard FETCH_HEAD，FETCH_HEAD表示上一次成功git pull之后形成的commit点。然后git pull.
            注意：
            git merge会形成MERGE-HEAD(FETCH-HEAD) 。git push会形成HEAD这样的引用。HEAD代表本地最近成功push后形成的引用。
            ”
            就我的经验，有时候会莫名其妙地出现这种状况，而且Untracked files 还特别多（实际上自己可能只改了一两个文件），所以只好先保存好自己确定做出的local的修改，
            然后用git reset --hard FETCH_HEAD回到上次成功pull之后的点，然后再pull就没有问题了


            上面成功后会打开一个文件，直接Esc：q退出即可。

---------------------------------------------------------
错误1补充
    ! [rejected] master -> master (non-fast-forward)

            今天往github上传东西的时候出现了这个错误，总结一下。

            之前使用过github上传东西但是，今天可能是我又创建了新的SSH链接所以需要密码和账号，但是密码账号验证之后还是会出现这种问题。

            后来看了一下别人的博客 ，貌似是因为两个电脑都要上传资料所以出现了问题，github拒绝访问

            解决方法

             正确的做法是，在push之前git fetch origin，将github上的新代码拉下来，然后在本地merge，如果没有冲突就可以push了，如果有冲突的话要在本地解决冲突后，再push。具体做法就是。
             

            git fetch origin git merge origin/master git push origin master

            还有就是回顾一下使用github上传下载的方法

            git init  //初始化仓库 git add . //添加文件到本地的库 git commit -m"explain" //将缓冲区的指令提交 


-----------------------------------------------------
错误1补充
    解决Git中fatal: refusing to merge unrelated histories
            一、fatal: refusing to merge unrelated histories
            今天在使用Git创建项目的时候，在两个分支合并的时候，出现了下面的这个错误。
            ~/SpringSpace/newframe on  master ⌚ 11:35:56
            $ git merge origin/druid
            fatal: refusing to merge unrelated histories
            这里的问题的关键在于：fatal: refusing to merge unrelated histories 
            你可能会在git pull或者git push中都有可能会遇到，这是因为两个分支没有取得关系。那么怎么解决呢？
            二、解决方案
            在你操作命令后面加--allow-unrelated-histories 
            例如： 
            git merge master --allow-unrelated-histories
            ~/SpringSpace/newframe on  druid ⌚ 11:36:49
            $ git merge master --allow-unrelated-histories
            Auto-merging .gitignore
            CONFLICT (add/add): Merge conflict in .gitignore
            Automatic merge failed; fix conflicts and then commit the result.
            如果你是git pull或者git push报fatal: refusing to merge unrelated histories 
            同理： 
            git pull origin master --allow-unrelated-histories 
------------------------------------------------------------------
Git 提示fatal: remote origin already exists 错误解决办法

1、先输入$ git remote rm origin

    2、再输入$ git remote add origin http/ssh....... 就不会报错了！


---------------------------------------------------------
错误2：git中的add和commit
    git add 后出现LF等字眼：
    warning: LF will be replaced by CRLF in README.md.
    The file will have its original line endings in your working directory

        是正常情况，可设置，这主要由行结束符号不同引起，区别window平台和linux而已，可不改。
        解决方案是：
找到当前本地的 git 工程工作空间（对于TortoiseGit 来说就是down下来的git工程根目录），打开隐藏的 .git 文件夹 找到 config 文件：
[core]
    repositoryformatversion = 0
    filemode = false
    bare = false
    logallrefupdates = true
    symlinks = false
    ………………
在[core]后面添加两个配置 autocrlf = false  safecrlf = false
[core]
    autocrlf = false
    safecrlf = false
    repositoryformatversion = 0
    filemode = false
    bare = false
    logallrefupdates = true
    symlinks = false
    ……………………
保存之后重新add就可以了，把true改成flase，其实不影响
---------------------------------------------------------------


侵权声明：
以上有转载，若侵权请联系本人。
本人侵权致歉！！！